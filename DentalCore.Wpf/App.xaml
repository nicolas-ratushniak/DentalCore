<Application x:Class="DentalCore.Wpf.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             
             xmlns:local="clr-namespace:DentalCore.Wpf"
             xmlns:views="clr-namespace:DentalCore.Wpf.Views"
             xmlns:viewModels="clr-namespace:DentalCore.Wpf.ViewModels">
    <Application.Resources>
        
        <Color x:Key="ColorAccent">#5CBAB8</Color>
        <Color x:Key="ColorMinor">#C1F376</Color>
        <Color x:Key="ColorMinorFocused">#5FC314</Color>
        <Color x:Key="GreyColor">#858a8c</Color>
        <Color x:Key="LightGreyColor">#dee0e0</Color>

        <!--Brushes-->
        <SolidColorBrush x:Key="BrushAccent" Color="{StaticResource ColorAccent}" />
        <SolidColorBrush x:Key="BrushMinor" Color="{StaticResource ColorMinor}" />
        <SolidColorBrush x:Key="BrushMinorFocused" Color="{StaticResource ColorMinorFocused}" />
        <SolidColorBrush x:Key="BrushGrey" Color="{StaticResource GreyColor}" />
        <SolidColorBrush x:Key="BrushLightGrey" Color="{StaticResource LightGreyColor}" />

        <!-- Text -->
        <Style x:Key="Title" TargetType="TextBlock">
            <Setter Property="FontSize" Value="32" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="18" />
        </Style>

        <Style x:Key="ErrorMessage" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="Crimson" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>

        <Style x:Key="AccentText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource BrushAccent}" />
            <Setter Property="FontWeight" Value="500" />
            <Setter Property="FontSize" Value="18" />
        </Style>
        
        <!-- RadioButtons -->
        <Style x:Key="NiceRadioButton" TargetType="RadioButton">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Background" Value="{StaticResource BrushMinor}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Background="{TemplateBinding Background}"
                                Padding="35,10">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="{StaticResource BrushMinorFocused}" />
                    <Setter Property="Foreground" Value="#FFFFFF" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Binding views to related view models -->
        <DataTemplate DataType="{x:Type viewModels:HomeViewModel}">
            <views:HomeView />
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type viewModels:LoginViewModel}">
            <views:LoginView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:PatientsViewModel}">
            <views:PatientsView />
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type viewModels:PatientInfoViewModel}">
            <views:PatientInfoView />
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type viewModels:PatientCreateViewModel}">
            <views:PatientCreateView />
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type viewModels:PatientUpdateViewModel}">
            <views:PatientUpdateView />
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type viewModels:VisitsViewModel}">
            <views:VisitsView />
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type viewModels:VisitInfoViewModel}">
            <views:VisitInfoView />
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type viewModels:VisitCreateViewModel}">
            <views:VisitCreateView />
        </DataTemplate>

    </Application.Resources>
</Application>
